version: "3.11"

services:

  web:
    build:
      context: .
      dockerfile: compose/prod/django/Dockerfile
    volumes:
      - ./:/code
    ports:
    - "8000:8000"
    depends_on:
      - redis
    env_file:
      - ./.envs/.prod/.django
    command: sh -c "python manage.py collectstatic --no-input && 
                    python manage.py makemigrations &&
                    python manage.py migrate &&
                    gunicorn --workers=4 --reload --max-requests=1000 config.wsgi:application -b 0.0.0.0:8000"

  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    working_dir: /code
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/prod/:/etc/nginx/conf.d:ro
      - ./certbot/conf/:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    links:
      - web
    depends_on:
      - web

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt:rw
      - ./certbot/www:/var/www/certbot:rw
#    command: certonly --webroot --webroot-path=/var/www/certbot/ --email shmicer@gmail.com --agree-tos --no-eff-email -d test2py.ru -d www.test2py.ru
    depends_on:
      - nginx

  redis:
    image: redis
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data

  worker:
    build:
      context: .
      dockerfile: compose/prod/django/Dockerfile
    restart: always
    env_file:
      - ./.envs/.prod/.django
    command: celery --app=config worker --loglevel=info --logfile=./logs/celery-worker.log
    volumes:
      - ./:/code
      - media:/code/media
    depends_on:
      - redis

  beat:
    build:
      context: .
      dockerfile: compose/prod/django/Dockerfile
    restart: always
    env_file:
      - ./.envs/.prod/.django
    command: celery --app=config beat --loglevel=info --logfile=./logs/celery-beat.log
    volumes:
      - media:/code/media
      - ./:/code
    depends_on:
      - redis

volumes:
  static:
  media: